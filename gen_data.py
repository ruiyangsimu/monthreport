# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/gen_pic.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import logging
import logging.config

import yaml
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QThread, pyqtSignal
from win32com.client import DispatchEx
import pythoncom

from gen_success import Ui_GenSuccessDialog

with open('./config/log.yaml', 'r') as f:
    config = yaml.safe_load(f.read())
    logging.config.dictConfig(config)

logger = logging.getLogger("uigendata")


class Ui_Gen_Data(object):
    def setupUi(self, Gen_Data):
        Gen_Data.setObjectName("Gen_Data")
        Gen_Data.setWindowModality(QtCore.Qt.WindowModal)
        Gen_Data.resize(429, 105)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Gen_Data.setWindowIcon(icon)
        self.progressBar = QtWidgets.QProgressBar(Gen_Data)
        self.progressBar.setGeometry(QtCore.QRect(20, 20, 401, 23))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setObjectName("progressBar")
        self.pushButton = QtWidgets.QPushButton(Gen_Data)
        self.pushButton.setGeometry(QtCore.QRect(160, 60, 81, 23))
        self.pushButton.setObjectName("pushButton")

        self.retranslateUi(Gen_Data)
        QtCore.QMetaObject.connectSlotsByName(Gen_Data)

    def retranslateUi(self, Gen_Data):
        _translate = QtCore.QCoreApplication.translate
        Gen_Data.setWindowTitle(_translate("Gen_Data", "生成数据"))
        self.pushButton.setText(_translate("Gen_Data", "生成数据"))

    def setData(self, picture):
        self.picture = picture
        self.picture.reload_config()
        self.progressBar.setMinimum(0)
        self.progressBar.setMaximum(self.picture.get_num())
        self.pushButton.clicked.connect(self.btnFunc)

    def btnFunc(self):
        self.thread = GenPicThread(self.picture)
        self.thread._signal.connect(self.signal_accept)
        self.picture.reload_config()
        self.thread.start()
        self.pushButton.setEnabled(False)

    def signal_accept(self, msg):
        if (self.progressBar.value() == self.picture.get_num()):
            self.progressBar.setValue(0)
        logger.debug("accect signal : %s", msg)
        value = self.picture.get_num()
        logger.debug("signal value: %s", value)
        self.progressBar.setValue(value)
        if self.progressBar.value() == self.picture.get_num():
            self.window = QtWidgets.QMainWindow()
            self.gsuccess = Ui_GenSuccessDialog()
            self.gsuccess.setupUi(self.window)
            self.window.show()
            self.pushButton.setEnabled(True)
            _translate = QtCore.QCoreApplication.translate
            self.pushButton.setText(_translate("Gen_Pic", "重新生成"))


class GenPicThread(QThread):
    _signal = pyqtSignal(int)

    def __init__(self, pic):
        super(GenPicThread, self).__init__()
        self.pic = pic

    def __del__(self):
        self.wait()

    def run(self):
        logger.debug("start gen data")
        logger.debug("start open Excel")
        pythoncom.CoInitialize()  # excel多线程相关
        excel = DispatchEx("Excel.Application")  # 启动excel
        logger.debug("open Excel success")
        self.pic.update_data(excel)
        self._signal.emit(1)
        logger.debug("gen data ok")

